// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  passwordHash   String
  fullName  String?
  role        Role     @default(USER)

  emailVerified         Boolean   @default(false)
  emailVerifiedAt       DateTime?
  verifyTokenHash       String?   @unique
  verifyTokenExpiresAt  DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

    // BACK-RELATION: một user có nhiều reset tokens
  resetTokens PasswordResetToken[]
}

model PasswordResetToken {
  id         String   @id @default(uuid())
  userId     String
  tokenHash  String   // hash của token gửi qua email
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  @@index([expiresAt])
}

model Location {
  id        String  @id @default(cuid())
  city      String
  country   String
  slug      String   @unique
  hotels    Hotel[]
}

model Hotel {
  id         String    @id @default(cuid())
  name       String
  address    String
  stars      Int
  latitude   Float
  longitude  Float
  amenities  String[]  // Postgres text[]
  priceFrom  Int?
  priceTo    Int?
  location   Location  @relation(fields: [locationId], references: [id])
  locationId String
  roomTypes  RoomType[]
}

model RoomType {
  id        String   @id @default(cuid())
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  hotelId   String
  name      String
  capacity     Int
  basePrice    Int
  amenities String[]
  area         Float?     
  bedType      String?    
  refundable   Boolean?   
  inventories  Inventory[]
  prices       PriceCalendar[]
}

model Inventory {
  id         String   @id @default(cuid())
  roomType   RoomType @relation(fields: [roomTypeId], references: [id])
  roomTypeId String
  date       DateTime
  available  Int      // số phòng còn cho ngày đó

  @@unique([roomTypeId, date]) // tránh ghi trùng ngày
}

model PriceCalendar {
  id         String   @id @default(cuid())
  roomType   RoomType @relation(fields: [roomTypeId], references: [id])
  roomTypeId String
  date       DateTime
  price      Int      // VND / đêm

  @@unique([roomTypeId, date])
}

// =================== Enum ===================

enum Role {
  USER
  ADMIN
  MANAGER
  STAFF
}


